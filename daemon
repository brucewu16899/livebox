#!/bin/sh
set -e
# this daemon will manage all m3u8 files

# location of the root
ROOT="/data/root"

# location of tmp
TMP="/data/tmp"

# order of apps to use
APPS="ad live backup"

# names of the substreams
SUBSTREAMS="720p 540p 360p 216p"

# number of entries to keep in m3u8
SIZE="10"

echo "[$(date)] deamon started"

generate_m3u8() {
    local CSV="$1" SCRATCH="$2" OUTPUT="$3"

    # no point in dealing with empty list
    [ -s "${CSV}" ] || return

    # now assemble the m3u8 file
    # if total number of segment output is not changed, then we can skip
    local TOTAL="$(wc -l "${CSV}" | awk '{print $1}')"
    if [ -s "${OUTPUT}" ] && [ "$(expr `grep '^#EXT-X-MEDIA-SEQUENCE:' ${OUTPUT} | cut -d: -f2` + `grep '.ts$' ${OUTPUT} | wc -l`)" = "${TOTAL}" ]; then
        return
    fi

    # write header
    mkdir -p "$(dirname ${SCRATCH})"
    echo "#EXTM3U" > "${SCRATCH}"
    echo "#EXT-X-VERSION:3" >> "${SCRATCH}"

    # figure out duration
    local TARGETDURATION="0"
    tail -n ${SIZE} "${CSV}" | while read LINE; do
        local DURATION="$(echo ${LINE} | cut -d, -f3)"
        local ROUNDED="$(echo ${DURATION} | cut -d. -f1)"
        if [ "$(echo ${DURATION} | cut -d. -f2)" -gt "0" ]; then
            ROUNDED="$(expr 1 + ${ROUNDED})"
        fi
        if [ "${ROUNDED}" -gt "${TARGETDURATION}" ]; then
            TARGETDURATION="${ROUNDED}"
            echo "#EXT-X-TARGETDURATION:${TARGETDURATION}"
        fi
    done | tail -n 1 >> "${SCRATCH}"

    # figure out the sequence number
    local SEQUENCE="$(expr ${TOTAL} - ${SIZE})"
    if [ "${SEQUENCE}" -lt "0" ]; then
        SEQUENCE="0"
    fi
    echo "#EXT-X-MEDIA-SEQUENCE:${SEQUENCE}" >> "${SCRATCH}"

    # write each segment
    local LASTSESSION="$(tail -n `expr 1 + ${SIZE}` "${CSV}" | head -n 1 | cut -d, -f2)"
    tail -n ${SIZE} "${CSV}" | while read LINE; do
        local SESSION="$(echo ${LINE} | cut -d, -f2)"
        local DURATION="$(echo ${LINE} | cut -d, -f3)"
        local TS="$(echo ${LINE} | cut -d, -f4)"

        # if session changes, we need to inject discontinuity
        if [ "${SESSION}" != "${LASTSESSION}" ]; then
            echo "#EXT-X-DISCONTINUITY" >> "${SCRATCH}"
        fi
        LASTSESSION="${SESSION}"

        # output segment
        echo "#EXTINF:${DURATION}," >> "${SCRATCH}"
        echo "${TS}" >> "${SCRATCH}"
    done

    # publish
    mv -f "${SCRATCH}" "${OUTPUT}"
}

update_csv() {
    local SOURCE="$1" CSV="$2" PREFIX="$3"

    # create csv if needed
    [ -f "${CSV}" ] || touch "${CSV}"

    # find the latest timestamp
    local LASTTIMESTAMP="$(tail -n 1 ${CSV} | cut -d, -f1)"
    if [ -z "${LASTTIMESTAMP}" ]; then
        LASTTIMESTAMP="0"
    fi

    # compare source and list and fill missing segments
    local DURATION="0"
    cat "${SOURCE}" | while read LINE; do
        if [ "${LINE#\#EXTINF:}" != "${LINE}" ]; then
            DURATION="${LINE}"
            DURATION="${DURATION#\#EXTINF:}"
            DURATION="${DURATION%,}"
            continue
        fi
        if [ "${LINE%.ts}" != "${LINE}" ]; then
            # for segments, check if timestamp is greater then last
            local TS="${LINE}"
            local TIMESTAMP="$(echo ${TS} | cut -d. -f3)"
            if [ "${TIMESTAMP}" -gt "${LASTTIMESTAMP}" ]; then
                LASTTIMESTAMP="${TIMESTAMP}"

                # append new segment to the list
                local SESSION="$(echo ${TS} | cut -d. -f1)"
                echo "${TIMESTAMP},${PREFIX}${SESSION},${DURATION},${PREFIX}${TS}" >> "${CSV}"
            fi
        fi
    done
}

list_substreams() {
    local STREAM="$1"

    echo ${SUBSTREAMS}
    # find "${ROOT}/${STREAM}" -mindepth 1 -maxdepth 1 -type f -iname '.*p.m3u8' -print 2>/dev/null | cut -d. -f2
}

try_stream() {
    local APP="$1"
    local STREAM="$2"
    local DIR="${ROOT}/${STREAM}/${APP}"
    local PREFIX="${APP}/"

    # check if any of the stream has stopped
    for SUBSTREAM in `list_substreams "${STREAM}"`; do
        if [ ! -s "${DIR}/${SUBSTREAM}.m3u8" ]; then
            return 1
        fi
        if [ "$(tail -q -n 1 ${DIR}/${SUBSTREAM}.m3u8)" = "#EXT-X-ENDLIST" ]; then
            return 1
        fi
    done

    for SUBSTREAM in `list_substreams "${STREAM}"`; do
        update_csv "${DIR}/${SUBSTREAM}.m3u8" "${ROOT}/${STREAM}/${SUBSTREAM}.csv" "${PREFIX}"
    done

    return 0
}

do_stream() {
    local STREAM="$1"

    # write the csv files first
    for APP in ${APPS}; do
        if try_stream "${APP}" "${STREAM}"; then
            break
        fi
    done

    # write the m3u8 file
    for SUBSTREAM in `list_substreams "${STREAM}"`; do
        generate_m3u8 "${ROOT}/${STREAM}/${SUBSTREAM}.csv" "${TMP}/${STREAM}.${SUBSTREAM}.m3u8" "${ROOT}/${STREAM}/${SUBSTREAM}.m3u8"
    done
}

list_streams() {
    find "${ROOT}" -mindepth 1 -maxdepth 1 -type d -exec basename {} \; 2>/dev/null || true
}


run_once() {
    if [ ! -d "${ROOT}" ]; then
        return
    fi

    for STREAM in `list_streams`; do
        do_stream "${STREAM}"
    done
}

while true; do
    sleep 0.1
    run_once
done

echo "[$(date)] deamon stopped"

